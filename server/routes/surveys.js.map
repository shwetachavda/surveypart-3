{"version":3,"sources":["routes/surveys.ts"],"names":[],"mappings":"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","file":"routes/surveys.js","sourcesContent":["import express = require('express');\nimport passport = require('passport');\nvar router = express.Router();\n\n// db references\nimport mongoose = require('mongoose');\n\nimport surveyModel = require('../models/survey');\nimport Survey = surveyModel.Survey;\n\nimport answerModel = require('../models/answer');\nimport Answer = answerModel.Answer;\n\n/* Utility Function to check if user is authenticated */\nfunction requireAuth(req:express.Request, res:express.Response, next: any) {\n    // check if the user is logged in\n    if (!req.isAuthenticated()) {\n        return res.redirect('/login');\n    }\n    next();\n}\n\n// GET - show main surveys page - list all the surveys\nrouter.get('/', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n   \n    // use the Survey model to query the Users collection\n    Survey.find((error, surveys) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            // no error, we found a list of users\n            res.render('surveys/index', {\n                title: 'Surveys',\n                surveys: surveys,\n                displayName: req.user ? req.user.displayName : ''\n            });\n        }\n    });\n});\n\n// GET add page - show the blank form\nrouter.get('/add', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n    res.render('surveys/add', {\n        title: 'Add a New Survey',\n        displayName: req.user ? req.user.displayName : ''\n    });\n});\n\n// POST add page - save the new user\nrouter.post('/add', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n    Survey.create({\n        name: req.body.name,\n        category: req.body.category,     \n        shortQue1: req.body.shortQue1,\n        shortQue2: req.body.shortQue2,\n        shortQue3: req.body.shortQue3,\n        shortQue4: req.body.shortQue4,\n        shortQue5: req.body.shortQue5,\n        \n    }, (error, User) => {\n        // did we get back an error or valid Users object?\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            res.redirect('/surveys');\n        }\n    })\n});\n\n// GET edit page - show the current user in the form\nrouter.get('/:id', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n\n    var id = req.params.id;\n\n    Survey.findById(id, (error, Survey) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            //show the edit view\n            res.render('surveys/edit', {\n                title: 'Survey Details',\n                survey: Survey,\n                displayName: req.user ? req.user.displayName : ''\n            });\n        }\n    });\n});\n\n// POST edit page - update the selected user\nrouter.post('/:id', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n\n    // grab the id from the url parameter\n    var id = req.params.id;\n\n    // create and populate a survey object\n    var survey = new Survey({\n        _id: id,\n        name: req.body.name,\n        category: req.body.category,\n        shortQue1: req.body.shortQue1,\n       shortQue2: req.body.shortQue2,\n       shortQue3: req.body.shortQue3,\n       shortQue4: req.body.shortQue4,\n       shortQue5: req.body.shortQue5,\n      \n    });\n    \n    \n\n    // run the update using mongoose and our model\n    Survey.update({ _id: id }, survey, (error) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            // if update is successful redirect to the users page\n            res.redirect('/surveys');\n        }\n    });\n});\n\n// GET delete user\nrouter.get('/delete/:id', requireAuth, (req: express.Request, res: express.Response, next: any) => {\n\n    // get the id from the url\n    var id = req.params.id;\n\n    // use the model and delete this record\n    Survey.remove({ _id: id }, (error) => {\n        if (error) {\n            console.log(error);\n            res.end(error);\n        }\n        else {\n            // if removal worked redirect to users page\n            res.redirect('/surveys');\n        }\n    });\n});\n\n\n\nrouter.get('/response', (req: express.Request, res: express.Response, next: any) => {\n    res.render('surveys/response', {\n        title: 'Add a New User',\n        displayName: req.user ? req.user.displayName : ''\n    });\n});\n\n// make this public\nmodule.exports = router;"],"sourceRoot":"/source/"}